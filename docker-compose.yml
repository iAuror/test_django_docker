version: '3'

services: 
  web:
    build:
      context: .
      dockerfile: bookshop_docker
    container_name: bookshop_web
    volumes: 
      - ./src:/src
    ports: 
      - '8000:8000'
    command: sh -c 'python3 manage.py migrate & python3 manage.py runserver 0.0.0.0:8000'
    #command: sh -c 'gunicorn book_shop.wsgi:application -b 0.0.0.0:8000 -w 5'
    env_file: 
      - keys.txt
    depends_on: 
      - postgres_db
      - cache
    #environment: 
#- POSTGRES_PASSWORD=useruser
     # - POSTGRES_USER=Auror
      #- POSTGRES_DB=bookshop_db

  postgres_db:
    image: postgres:latest
    container_name: test_db
    env_file: 
      - keys.txt
    #environment: 
    #  - POSTGRES_PASSWORD=useruser
    #  - POSTGRES_USER=Auror
    #  - POSTGRES_DB=bookshop_db

  adminer:
    image: adminer:latest
    container_name: adminer
    ports: 
      - '8080:8080'
    depends_on: 
      - postgres_db

  cache:
    image: redis:latest
    container_name: web_cache

  node:
    image: node:latest
    container_name: node_
    command: sleep 100000  
    
  celery:
    build:
      context: . 
      dockerfile: bookshop_docker
    container_name: celery
    volumes: 
      - ./src:/src
    env_file: 
      - keys.txt
    depends_on: 
      - postgres_db
      - cache
    command: sh -c 'celery -A book_shop worker -l INFO '  #-B  включение байндера (повторение задач через определенное время)
  # Тесты :
    # gunicorn 309.1
    # gunicorn worker2  311  w5 307
    # cache  289.1
    # nothing 372